{"0": {
    "doc": "USRP Connectivity",
    "title": "USRP X310 Connectivity",
    "content": ". ",
    "url": "http://localhost:4000/docs/usrp/USRP_Connection/#usrp-x310-connectivity",
    "relUrl": "/docs/usrp/USRP_Connection/#usrp-x310-connectivity"
  },"1": {
    "doc": "USRP Connectivity",
    "title": "Connect to host via Gigabit Ethernet",
    "content": "It is recommended to connect the USRP X310 directly with the host via Gigabit Ethernet interface. STEP 1: Connect ethernet cable to the port 0 on X310. 1 Gigabit to SFP+ adapter and &gt;Cat5E cable are required. STEP 2: Configure the network of host. | Check the connection X310 is using in Ubuntu network manager. Here, I use an USB Ethernet card, which is wired connection 4. | . | Go to the connection setup, IPV4 settings. Configure the host as following. | . STEP 3: Disable networking, then enable networking. STEP 4: Check device connectivity using uhd_find_devices. jiawei@evga:~$ uhd_find_devices [INFO] [UHD] linux; GNU C++ version 5.4.0 20160609; Boost_105800; UHD_3.14.0.HEAD-0-g6875d061 -------------------------------------------------- -- UHD Device 0 -------------------------------------------------- Device Address: serial: 31792BA addr: 192.168.10.2 fpga: HG name: product: X310 type: x300 . Run uhd_usrp_probe --args addr=192.168.10.2 to make sure all components are correctly detected and usable. ",
    "url": "http://localhost:4000/docs/usrp/USRP_Connection/#connect-to-host-via-gigabit-ethernet",
    "relUrl": "/docs/usrp/USRP_Connection/#connect-to-host-via-gigabit-ethernet"
  },"2": {
    "doc": "USRP Connectivity",
    "title": "Ten Gigabit",
    "content": "STEP 1: Connect the SFP+ cable to port 1. Step 2: Same as Gigabit Ethernet one. Except the host IP should be 192.168.40.1 . jiawei@evga:~$ uhd_find_devices [INFO] [UHD] linux; GNU C++ version 5.4.0 20160609; Boost_105800; UHD_3.14.0.HEAD-0-g6875d061 -------------------------------------------------- -- UHD Device 0 -------------------------------------------------- Device Address: serial: 31792BA addr: 192.168.40.2 fpga: HG name: product: X310 type: x300 . ",
    "url": "http://localhost:4000/docs/usrp/USRP_Connection/#ten-gigabit",
    "relUrl": "/docs/usrp/USRP_Connection/#ten-gigabit"
  },"3": {
    "doc": "USRP Connectivity",
    "title": "Change the USRP’s IP address",
    "content": "cd /usr/local/lib/uhd/utils ./usrp_burn_mb_eeprom --args=\"addr=192.168.40.2,type=x300\" --read-all ./usrp_burn_mb_eeprom --args=\"addr=192.168.40.2,type=x300\" --values=\"ip-addr0=192.168.10.3\" . In my case, the install path is /usr/local/lib/uhd/utils . ",
    "url": "http://localhost:4000/docs/usrp/USRP_Connection/#change-the-usrps-ip-address",
    "relUrl": "/docs/usrp/USRP_Connection/#change-the-usrps-ip-address"
  },"4": {
    "doc": "USRP Connectivity",
    "title": "Default X310 Network Parameters",
    "content": "| Ethernet Interface | USRP Ethernet Port | Default USRP IP Address | Host Static IP Address | Host Static Subnet Mask | Address EEPROM key | Connection Type | . | Gigabit | Port 0 (HG Image) | 192.168.10.2 | 192.168.10.1 | 255.255.255.0 | ip-addr0 | Single | . | Ten Gigabit | Port 0 (XG Image) | 192.168.30.2 | 192.168.30.1 | 255.255.255.0 | ip-addr2 | Twin | . | Ten Gigabit | Port 1 (HG/XG Image) | 192.168.40.2 | 192.168.40.1 | 255.255.255.0 | ip-addr3 | Single | . sudo ifconfig enp3s0f0 mtu 9000 sudo ifconfig enp3s0f1 mtu 9000 sudo sysctl -w net.core.rmem_max=24862979 sudo sysctl -w net.core.wmem_max=24862979 for ((i=0;i&lt;$(nproc);i++)); do sudo cpufreq-set -c $i -r -g performance; done cpufreq-info . ",
    "url": "http://localhost:4000/docs/usrp/USRP_Connection/#default-x310-network-parameters",
    "relUrl": "/docs/usrp/USRP_Connection/#default-x310-network-parameters"
  },"5": {
    "doc": "USRP Connectivity",
    "title": "USRP Connectivity",
    "content": " ",
    "url": "http://localhost:4000/docs/usrp/USRP_Connection/",
    "relUrl": "/docs/usrp/USRP_Connection/"
  },"6": {
    "doc": "GNURadio UHD Linux Toolchain",
    "title": "Building and Installing the USRP Open-Source Toolchain (UHD and GNU Radio) on Linux",
    "content": "Update and Install dependencies . Before building UHD and GNU Radio, you need to make sure that all the dependencies are first installed. However, before installing any dependencies, you should first make sure that all the packages that are already installed on your system are up-to-date. You can do this from a GUI, or from the command-line, as shown below. On Ubuntu systems, run: . sudo apt-get update . On Ubuntu 18.04 systems, run: . sudo apt-get -y install git swig cmake doxygen build-essential libboost-all-dev libtool libusb-1.0-0 libusb-1.0-0-dev libudev-dev libncurses5-dev libfftw3-bin libfftw3-dev libfftw3-doc libcppunit-1.14-0 libcppunit-dev libcppunit-doc ncurses-bin cpufrequtils python-numpy python-numpy-doc python-numpy-dbg python-scipy python-docutils qt4-bin-dbg qt4-default qt4-doc libqt4-dev libqt4-dev-bin python-qt4 python-qt4-dbg python-qt4-dev python-qt4-doc python-qt4-doc libqwt6abi1 libfftw3-bin libfftw3-dev libfftw3-doc ncurses-bin libncurses5 libncurses5-dev libncurses5-dbg libfontconfig1-dev libxrender-dev libpulse-dev swig g++ automake autoconf libtool python-dev libfftw3-dev libcppunit-dev libboost-all-dev libusb-dev libusb-1.0-0-dev fort77 libsdl1.2-dev python-wxgtk3.0 git libqt4-dev python-numpy ccache python-opengl libgsl-dev python-cheetah python-mako python-lxml doxygen qt4-default qt4-dev-tools libusb-1.0-0-dev libqwtplot3d-qt5-dev pyqt4-dev-tools python-qwt5-qt4 cmake git wget libxi-dev gtk2-engines-pixbuf r-base-dev python-tk liborc-0.4-0 liborc-0.4-dev libasound2-dev python-gtk2 libzmq3-dev libzmq5 python-requests python-sphinx libcomedi-dev python-zmq libqwt-dev libqwt6abi1 python-six libgps-dev libgps23 gpsd gpsd-clients python-gps python-setuptools . On Ubuntu 16.04 systems, run: . sudo apt-get -y install git swig cmake doxygen build-essential libboost-all-dev libtool libusb-1.0-0 libusb-1.0-0-dev libudev-dev libncurses5-dev libfftw3-bin libfftw3-dev libfftw3-doc libcppunit-1.13-0v5 libcppunit-dev libcppunit-doc ncurses-bin cpufrequtils python-numpy python-numpy-doc python-numpy-dbg python-scipy python-docutils qt4-bin-dbg qt4-default qt4-doc libqt4-dev libqt4-dev-bin python-qt4 python-qt4-dbg python-qt4-dev python-qt4-doc python-qt4-doc libqwt6abi1 libfftw3-bin libfftw3-dev libfftw3-doc ncurses-bin libncurses5 libncurses5-dev libncurses5-dbg libfontconfig1-dev libxrender-dev libpulse-dev swig g++ automake autoconf libtool python-dev libfftw3-dev libcppunit-dev libboost-all-dev libusb-dev libusb-1.0-0-dev fort77 libsdl1.2-dev python-wxgtk3.0 git-core libqt4-dev python-numpy ccache python-opengl libgsl-dev python-cheetah python-mako python-lxml doxygen qt4-default qt4-dev-tools libusb-1.0-0-dev libqwt5-qt4-dev libqwtplot3d-qt4-dev pyqt4-dev-tools python-qwt5-qt4 cmake git-core wget libxi-dev gtk2-engines-pixbuf r-base-dev python-tk liborc-0.4-0 liborc-0.4-dev libasound2-dev python-gtk2 libzmq-dev libzmq1 python-requests python-sphinx libcomedi-dev python-zmq python-setuptools . Building and installing UHD from source code . First, make a folder to hold the repository. cd $HOME mkdir workarea cd workarea . Next, clone the repository and change into the cloned directory. git clone https://github.com/EttusResearch/uhd cd uhd . Next, checkout the desired UHD version. You can get a full listing of tagged releases by running the command: . git tag -l . Example truncated output of git tag -l: . $ git tag -l ... release_003_009_004 release_003_009_005 release_003_010_000_000 . After identifying the version and corresponding release tag you need, check it out: . git checkout v3.14.0.0 . Next, create a build folder within the repository, invoke CMake and build UHD. cd host mkdir build cd build cmake ../ make -j 12 . Next, you can optionally run some basic tests to verify that the build process completed properly. make test -j 12 . Next, install UHD, using the default install prefix, which will install UHD under the /usr/local/lib folder. You need to run this as root due to the permissions on that folder. sudo make install . Next, update the system’s shared library cache. sudo ldconfig . Finally, make sure that the LD_LIBRARY_PATH environment variable is defined and includes the folder under which UHD was installed. Most commonly, you can add the line below to the end of your $HOME/.bashrc file: . export LD_LIBRARY_PATH=/usr/local/lib . Downloading the UHD FPGA Images . You can now download the UHD FPGA Images for this installation. This can be done by running the command uhd_images_downloader. $ sudo uhd_images_downloader . Updating the FPGA . Power on the USRP and run . uhd_image_loader --args=\"type=x300,addr=192.168.10.2,fpga=HG\" . Building and installing GNU Radio from source code . First, make a folder to hold the repository. cd $HOME cd workarea . Next, clone the repository. git clone --recursive https://github.com/gnuradio/gnuradio . Next, go into the repository and check out the desired GNU Radio version. cd gnuradio . To checkout the v3.7.13.4 branch: . git checkout v3.7.13.4 . Next, update the submodules: . git submodule update --init --recursive . Next, create a build folder within the repository, invoke CMake, and build GNU Radio: . mkdir build cd build cmake ../ make -j 12 . Next, you can optionally run some basic tests to verify that the build process completed properly. make test -j 12 . Next, install GNU Radio, using the default install prefix, which will install GNU Radio under the /usr/local/lib folder. You need to run this as root due to the permissions on that folder. sudo make install . Finally, update the system’s shared library cache. sudo ldconfig . At this point, GNU Radio should be installed and ready to use. You can quickly test this, with no USRP device attached, by running the following quick tests. gnuradio-config-info --version gnuradio-config-info --prefix gnuradio-config-info --enabled-components . There is a simple flowgraph that you can run that does not require any USRP hardware. It’s called the dialtone test, and it produces a PSTN dial tone on the computer’s speakers. Running it verifies that all the libraries can be found, and that the GNU Radio run-time is working. python $HOME/workarea/gnuradio/gr-audio/examples/python/dial_tone.py . You can try launching the GNU Radio Companion (GRC) tool, a visual tool for building and running GNU Radio flowgraphs. gnuradio-companion . If “gnuradio-companion” does not start and complains about the PYTHONPATH environment variable, then you may have to set this in your $HOME/.bashrc file, as shown below. export PYTHONPATH=/usr/local/lib/python2.7/dist-packages . ",
    "url": "http://localhost:4000/docs/usrp/gnuradio_uhd_linux_toolchain/#building-and-installing-the-usrp-open-source-toolchain-uhd-and-gnu-radio-on-linux",
    "relUrl": "/docs/usrp/gnuradio_uhd_linux_toolchain/#building-and-installing-the-usrp-open-source-toolchain-uhd-and-gnu-radio-on-linux"
  },"7": {
    "doc": "GNURadio UHD Linux Toolchain",
    "title": "GNURadio UHD Linux Toolchain",
    "content": " ",
    "url": "http://localhost:4000/docs/usrp/gnuradio_uhd_linux_toolchain/",
    "relUrl": "/docs/usrp/gnuradio_uhd_linux_toolchain/"
  },"8": {
    "doc": "Markdown kitchen sink",
    "title": "Header 1",
    "content": "This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. ",
    "url": "http://localhost:4000/docs/index-test/#header-1",
    "relUrl": "/docs/index-test/#header-1"
  },"9": {
    "doc": "Markdown kitchen sink",
    "title": "Header 2",
    "content": "This is a blockquote following a header. When something is important enough, you do it even if the odds are not in your favor. Header 3 . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require('./lang/' + l) return true; } . # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, \"= #{version}\") end . Header 4 with code not transformed . | This is an unordered list following a header. | This is an unordered list following a header. | This is an unordered list following a header. | . Header 5 . | This is an ordered list following a header. | This is an ordered list following a header. | This is an ordered list following a header. | . Header 6 . | head1 | head two | three | . | ok | good swedish fish | nice | . | out of stock | good and plenty | nice | . | ok | good oreos | hmm | . | ok | good zoute drop | yumm | . There’s a horizontal rule below this. Here is an unordered list: . | Item foo | Item bar | Item baz | Item zip | . And an ordered list: . | Item one | Item two | Item three | Item four | . And an ordered list, continued: . | Item one | Item two | . Some text . | Item three | Item four | . And an ordered list starting from 42: . | Item 42 | Item 43 | Item 44 | . And a nested list: . | level 1 item . | level 2 item | level 2 item . | level 3 item | level 3 item | . | . | level 1 item . | level 2 item | level 2 item | level 2 item | . | level 1 item . | level 2 item | level 2 item | . | level 1 item | . Nesting an ol in ul in an ol . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) . | level 2 item (ol) | level 2 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | level 4 item (ol) | level 4 item (ol) . | level 3 item (ul) | level 3 item (ul) | . | . | level 1 item (ul) | . And a task list . | Hello, this is a TODO item | Hello, this is another TODO item | Goodbye, this item is done | . Small image . Large image . Large image . “Wroclaw University Library digitizing rare archival texts” by j_cadmus is marked with CC BY 2.0. Definition lists can be used with HTML syntax. Name Godzilla Born 1952 Birthplace Japan Color Green Multiple description terms and values . Term Brief description of Term Longer Term Longer description of Term, possibly more than one line Term First description of Term, possibly more than one line Second description of Term, possibly more than one line . Term1 Term2 Single description of Term1 and Term2, possibly more than one line Term1 Term2 First description of Term1 and Term2, possibly more than one line Second description of Term1 and Term2, possibly more than one line . More code . Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. The final element. ",
    "url": "http://localhost:4000/docs/index-test/#header-2",
    "relUrl": "/docs/index-test/#header-2"
  },"10": {
    "doc": "Markdown kitchen sink",
    "title": "Markdown kitchen sink",
    "content": "Text can be bold, italic, or strikethrough. Link to another page. There should be whitespace between paragraphs. There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. ",
    "url": "http://localhost:4000/docs/index-test/",
    "relUrl": "/docs/index-test/"
  },"11": {
    "doc": "Home",
    "title": "Jiawei Li",
    "content": ". ",
    "url": "http://localhost:4000/#jiawei-li",
    "relUrl": "/#jiawei-li"
  },"12": {
    "doc": "Home",
    "title": "BIOGRAPHY",
    "content": " ",
    "url": "http://localhost:4000/#biography",
    "relUrl": "/#biography"
  },"13": {
    "doc": "Home",
    "title": "Education",
    "content": "| Arizona State University Ph.D. in Computer Engineering | Tempe, AZ 01/2019- Now | . | Nanjing University of Posts and Telecommunications B.E. in Telecommunication Engineering | Nanjing, China 09/2013-07/2017 | . ",
    "url": "http://localhost:4000/#education",
    "relUrl": "/#education"
  },"14": {
    "doc": "Home",
    "title": "Experience",
    "content": "| Arizona State University Research Assistant, Advisor: Dr. Yanchao Zhang |   | Tempe, AZ 01/2019- Now | . | Arizona State University Teaching Assistant, EEE455: Communication Systems |   | Tempe, AZ 22Spring | . | Arizona State University Teaching Assistant, EEE120: Digital Design Fundamentals |   | Tempe, AZ 19Spring, 19Fall, 21Fall | . | Michigan State University Research Assistant |   | East Lansing, MI 08/2017- 11/2018 | . ",
    "url": "http://localhost:4000/#experience",
    "relUrl": "/#experience"
  },"15": {
    "doc": "Home",
    "title": "Publications",
    "content": "| SpecKriging: GNN-based SecureCooperative Spectrum Sensing Yan Zhang, Ang Li, Jiawei Li, Dianqi Han, Tao Li, Rui Zhang, Yanchao Zhang IEEE Transactions on Wireless Communications, 2022 | Paper | . | WearRF-CLA: Continuous Location Authentication with Wrist Wearables and UHF RFID Ang Li, Jiawei Li, Dianqi Han, Yan Zhang, Tao Li, Yanchao Zhang ACM AsiaCCS, 2022 | Paper | . | SmartMagnet: Proximity-Based Access Control for IoT Devices with Smartphones and Magnets Yan Zhang, Dianqi Han, Ang Li, Jiawei Li, Tao Li, Yanchao Zhang IEEE Transactions on Mobile Computing, 2022 | Paper | . | RCID: Fingerprinting Passive RFID Tags via Wideband Backscatter Jiawei Li, Ang Li, Dianqi Han, Tao Li, Yan Zhang, Yanchao Zhang IEEE International Conference on Computer Communications (INFOCOM), 2022 | Paper | . | DroneKey: A Drone-Aided Group-Key Generation Scheme for Large-Scale IoT Networks Dianqi Han, Ang Li, Jiawei Li, Yan Zhang, Tao Li, and Yanchao Zhang ACM Conference on Computer and Communications Security (CCS), 2021. | Paper | . | Deep Learning-Guided Jamming for Cross-Technology Wireless Networks: Attack and Defense Dianqi Han, Ang Li, Lili Zhang, Yan Zhang, Jiawei Li, Tao Li, Ting Zhu, Yanchao Zhang IEEE/ACM Transactions on Networking, 2021. | Paper | . | (In)secure Acoustic Mobile Authentication Dianqi Han, Ang Li, Lili Zhang, Yan Zhang, Jiawei Li, Tao Li, Rui Zhang, Yanchao Zhang IEEE Transactions on Mobile Computing, 2021. | Paper | . | Your Home is Insecure: Practical Attacks on Wireless Home Alarm Systems Tao Li, Dianqi Han, Jiawei Li, Ang Li, Yan Zhang, Rui Zhang, Yanchao Zhang IEEE International Conference on Computer Communications (INFOCOM), 2021. | Paper | . | RF-Rhythm: Secure and Usable Two-Factor RFID Authentication Jiawei Li, Chuyu Wang, Ang Li, Dianqi Han, Yan Zhang, Jinhang Zuo, Rui Zhang, Lei Xie, Yanchao Zhang IEEE International Conference on Computer Communications (INFOCOM), 2020. | Paper | . | The Dark Side of Operational Wi-Fi Calling Services Tian Xie, Guan-Hua Tu, Chi-Yu Li, Chunyi Peng, Jiawei Li, and Mi Zhang IEEE Conference on Communications and Network Security (CNS), 2018. | Paper | . | Joint Motion Similarity (JMS)-Based Human Action Recognition Using Kinect Jiawei Li, Jianxin Chen, and Linhui Sun IEEE DICTA, 2016. | Paper | . ",
    "url": "http://localhost:4000/#publications",
    "relUrl": "/#publications"
  },"16": {
    "doc": "Home",
    "title": "Professional Services",
    "content": ". | Journal Reviewer for: . | IEEE/ACM Transactions on Networking | ACM Transactions on Sensor Networks | Journal of Network and Systems Management | . | Conference Reviewer for: . | IEEE ICDCS 2020, 2022 | ACM Mobihoc 2020, 2022 | IEEE WiSec 2020 | IEEE VNC 2018 | IEEE BigData 2018 | IEEE VTC 2017 | . | Student Volunteer: IEEE INFOCOM, May 2–5, 2022 | Seminar: 03/2020, ”RF-Rhythm: Secure and Usable Two-Factor RFID Authentication”, Cybersecurity and Forensics Science Seminar, Arizona State University | Student member of IEEE | . ",
    "url": "http://localhost:4000/#professional-services",
    "relUrl": "/#professional-services"
  },"17": {
    "doc": "Home",
    "title": "Awards",
    "content": ". | 05/2022: IEEE INFOCOM Student Travel Grant | 06/2020: IEEE INFOCOM Student Travel Grant | 08/2019: University Graduate Fellowship | 01/2019: University Graduate Fellowship | 06/2017: Outstanding Dissertation Award | 06/2017: Outstanding Graduates Award | 12/2015: 2nd Prize of National College Competition on Internet of Things (East of China) | 11/2015: 3rd Prize of ”Challenge Cup” National Undergraduate Curricular Academic Science and Technology Works | 2015/2016: 2nd Prize of College Scholarship (GPA TOP 5%) | 2014/2015: 2nd Prize of College Scholarship (GPA TOP 5%) | 2013/2014: 1st Prize of College Scholarship (GPA TOP 1%), Narada Scholarship (GPA RANK 2), 1st Prize of | Sunwave Communication Scholarship (GPA RANK 2) | . ",
    "url": "http://localhost:4000/#awards",
    "relUrl": "/#awards"
  },"18": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  },"19": {
    "doc": "Matlab Import Raw IQ Data",
    "title": "Matlab Import Raw IQ Data",
    "content": "f = fopen('csi20.dat', 'rb'); v = fread(f, 'float'); fclose(f); n = length(v); di = v(1:2:(n - 1)); dq = v(2:2:n); s_in = di + 1i * dq; . ",
    "url": "http://localhost:4000/docs/usrp/matlab/",
    "relUrl": "/docs/usrp/matlab/"
  },"20": {
    "doc": "RFID",
    "title": "Utilities",
    "content": "CSS utility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. ",
    "url": "http://localhost:4000/docs/rfid#utilities",
    "relUrl": "/docs/rfid#utilities"
  },"21": {
    "doc": "RFID",
    "title": "RFID",
    "content": " ",
    "url": "http://localhost:4000/docs/rfid",
    "relUrl": "/docs/rfid"
  },"22": {
    "doc": "USRP",
    "title": "Utilities",
    "content": "CSS utility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. ",
    "url": "http://localhost:4000/docs/usrp#utilities",
    "relUrl": "/docs/usrp#utilities"
  },"23": {
    "doc": "USRP",
    "title": "USRP",
    "content": " ",
    "url": "http://localhost:4000/docs/usrp",
    "relUrl": "/docs/usrp"
  }
}
